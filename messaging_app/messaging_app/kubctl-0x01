#!/bin/bash

# Script to scale Django app, verify pods, load test, and monitor resources

DEPLOYMENT_NAME="django-messaging-app"
SERVICE_NAME="django-messaging-service"
NAMESPACE="default"
PORT=8000

# Scale deployment to 3 replicas
echo "Scaling $DEPLOYMENT_NAME to 3 replicas..."
kubectl scale deployment $DEPLOYMENT_NAME --replicas=3

# Wait for pods to be ready
echo "Waiting for pods to be ready..."
kubectl rollout status deployment/$DEPLOYMENT_NAME

# Verify multiple pods are running
echo "Current pods:"
kubectl get pods -l app=$DEPLOYMENT_NAME

# Get the ClusterIP of the service
CLUSTER_IP=$(kubectl get svc $SERVICE_NAME -o jsonpath='{.spec.clusterIP}')
echo "Service ClusterIP: $CLUSTER_IP"

# Load testing with wrk (must be installed and run from within the cluster or a pod with network access)
echo "Running load test with wrk (10s, 2 threads, 10 connections)..."
echo "If wrk is not installed, please install it or run this section from a pod with wrk."
wrk -t2 -c10 -d10s http://$CLUSTER_IP:$PORT/ || echo "wrk failed or not installed."

# Monitor resource usage
echo "Resource usage (kubectl top pods):"
kubectl top pods || echo "kubectl top requires metrics-server to be installed." 
